---
- include_vars: host-init-vars.yml
  tags: [cert-install]

# Add users, certs and set up hosts.

- name: Add local host list.
  become: yes
  copy: src=hosts dest=/etc/ owner=root group=root mode=0644
  tags: hosts-setup

- name: Set hostname
  hostname:
    name: "{{ inventory_hostname }}"
  become: yes
  tags: hosts-setup

- name: Set hostname in /etc/
  command: echo {{ inventory_hostname }} > /etc/hostname
  become: yes
  tags: hosts-setup

- name: Create directories for backups
  become: yes
  file:
      path="{{ item }}"
      state="directory"
      owner="ubuntu"
      group="root"
      mode="0755"
  with_items:
    - /var/backups/docker
    - /var/backups/docker/db
    - /var/backups/docker/es
  tags: hosts-setup

- name: Remove Canonical deb mirrors.
  apt_repository:
    state: absent
    repo: "{{ item }}"
  with_items: ['deb http://Persistent_02.clouds.archive.ubuntu.com/ubuntu/ bionic main restricted',
               'deb-src http://Persistent_02.clouds.archive.ubuntu.com/ubuntu/ bionic main restricted',
               'deb http://Persistent_02.clouds.archive.ubuntu.com/ubuntu/ bionic-updates main restricted',
               'deb-src http://Persistent_02.clouds.archive.ubuntu.com/ubuntu/ bionic-updates main restricted',
               'deb http://Persistent_02.clouds.archive.ubuntu.com/ubuntu/ bionic universe',
               'deb-src http://Persistent_02.clouds.archive.ubuntu.com/ubuntu/ bionic universe',
               'deb http://Persistent_02.clouds.archive.ubuntu.com/ubuntu/ bionic-updates universe',
               'deb-src http://Persistent_02.clouds.archive.ubuntu.com/ubuntu/ bionic-updates universe',
               'deb http://Persistent_02.clouds.archive.ubuntu.com/ubuntu/ bionic multiverse',
               'deb-src http://Persistent_02.clouds.archive.ubuntu.com/ubuntu/ bionic multiverse',
               'deb http://Persistent_02.clouds.archive.ubuntu.com/ubuntu/ bionic-updates multiverse',
               'deb-src http://Persistent_02.clouds.archive.ubuntu.com/ubuntu/ bionic-updates multiverse',
               'deb http://Persistent_02.clouds.archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse',
               'deb-src http://Persistent_02.clouds.archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse',
               'deb http://security.ubuntu.com/ubuntu bionic-security main restricted',
               'deb-src http://security.ubuntu.com/ubuntu bionic-security main restricted',
               'deb http://security.ubuntu.com/ubuntu bionic-security universe',
               'deb-src http://security.ubuntu.com/ubuntu bionic-security universe',
               'deb http://security.ubuntu.com/ubuntu bionic-security multiverse',
               'deb-src http://security.ubuntu.com/ubuntu bionic-security multiverse']
  become: yes

- name: Add Compute Canada ubuntu deb mirrors.
  apt_repository:
    state: present
    repo: "{{ item }}"
  with_items: ['deb https://mirror.its.sfu.ca/mirror/ubuntu/ bionic main restricted',
           'deb-src https://mirror.its.sfu.ca/mirror/ubuntu/ bionic main restricted',
           'deb https://mirror.its.sfu.ca/mirror/ubuntu/ bionic-updates main restricted',
           'deb-src https://mirror.its.sfu.ca/mirror/ubuntu/ bionic-updates main restricted',
           'deb https://mirror.its.sfu.ca/mirror/ubuntu/ bionic universe',
           'deb-src https://mirror.its.sfu.ca/mirror/ubuntu/ bionic universe',
           'deb https://mirror.its.sfu.ca/mirror/ubuntu/ bionic-updates universe',
           'deb-src https://mirror.its.sfu.ca/mirror/ubuntu/ bionic-updates universe',
           'deb https://mirror.its.sfu.ca/mirror/ubuntu/ bionic multiverse',
           'deb-src https://mirror.its.sfu.ca/mirror/ubuntu/ bionic multiverse',
           'deb https://mirror.its.sfu.ca/mirror/ubuntu/ bionic-updates multiverse',
           'deb-src https://mirror.its.sfu.ca/mirror/ubuntu/ bionic-updates multiverse',
           'deb https://mirror.its.sfu.ca/mirror/ubuntu/ bionic-backports main restricted universe multiverse',
           'deb-src https://mirror.its.sfu.ca/mirror/ubuntu/ bionic-backports main restricted universe multiverse',
           'deb https://mirror.its.sfu.ca/mirror/ubuntu/ bionic-security main restricted',
           'deb-src https://mirror.its.sfu.ca/mirror/ubuntu/ bionic-security main restricted',
           'deb https://mirror.its.sfu.ca/mirror/ubuntu/ bionic-security universe',
           'deb-src https://mirror.its.sfu.ca/mirror/ubuntu/ bionic-security universe',
           'deb https://mirror.its.sfu.ca/mirror/ubuntu/ bionic-security multiverse',
           'deb-src https://mirror.its.sfu.ca/mirror/ubuntu/ bionic-security multiverse']
  become: yes

# Add certificates
- name: Add the certbot repository to apt
  apt_repository:
    repo: 'ppa:certbot/certbot'
  become: yes
  tags: cert-install

- name: Update all packages
  become: yes
  apt:
    update_cache: yes
    upgrade: yes
  tags: cert-install

- name: Add needed early stage packages.
  apt:
    name: "{{ item }}"
  with_items:
    - git
    - python-pycurl
    - software-properties-common
    - apt-transport-https
    - curl
    - software-properties-common
    - certbot
  tags: [install-packages]
  become: yes

- name: Stop nginx to renew certs.
  service:
    service: nginx
    state: stopped
  tags: cert-install
  become: yes
  when: "'registry-hosts' in group_names"
  ignore_errors: yes

- name: Get certifcates via LetsEncrypt certbot
  command: certbot --standalone --non-interactive --agree-tos -m "{{ admin_email_address }}" -d "{{ inventory_hostname }}" certonly
  become: yes
  tags: cert-install
  ignore_errors: yes

- name: Start nginx
  service:
    name: nginx
    state: started
  tags: cert-install
  become: yes
  when: "'registry-hosts' in group_names"
  ignore_errors: yes

- name: Cron job to renew letsencrypt certificates
  become: yes
  cron:
      hour: "6"
      minute: "0"
      day: "1,15"
      job: "(/usr/sbin/service nginx stop && /usr/bin/certbot renew && /usr/sbin/service nginx start)"
      name: "Renew letsencrypts certificates"
      state: present
      user: root
  tags: cert-install
  when: "'registry-hosts' in group_names"
  ignore_errors: yes

- name: Link correct certificate private key for nginx
  file:
    state: link
    path: /etc/ssl/private/frdr.key
    src: /etc/letsencrypt/live/{{ inventory_hostname }}/privkey.pem
  become: yes
  tags: cert-install
  ignore_errors: yes

- name: Link correct certificage for nginx
  file:
    state: link
    path: /etc/ssl/certs/frdr.crt
    src: /etc/letsencrypt/live/{{ inventory_hostname }}/fullchain.pem
  become: yes
  tags: cert-install
  ignore_errors: yes

# Update packages and install some early dependencies.

- name: Update all packages
  become: yes
  apt:
    update_cache: yes
    upgrade: yes
  tags: cert-install

