---
- include_vars: host-init-vars.yml
  tags: [cert-install]

# Add users, certs and set up hosts.

- name: Add local host list.
  become: yes
  copy: src=hosts dest=/etc/ owner=root group=root mode=0644
  tags: hosts-setup

- name: Set hostname
  hostname:
    name: "{{ inventory_hostname }}"
  become: yes
  tags: hosts-setup

- name: Set hostname in /etc/
  command: echo {{ inventory_hostname }} > /etc/hostname
  become: yes
  tags: hosts-setup

- name: Create directories for backups
  become: yes
  file:
      path="{{ item }}"
      state="directory"
      owner="root"
      group="root"
      mode="0755"
  with_items:
    - /var/backups/docker
    - /var/backups/docker/db
    - /var/backups/docker/es
  tags: hosts-setup
  
# Add certificates
- name: Add the certbot repository to apt
  apt_repository:
    repo: 'ppa:certbot/certbot'
  become: yes
  tags: cert-install

- name: Update all packages
  become: yes
  apt:
    update_cache: yes
    upgrade: yes
  tags: cert-install

- name: Add needed early stage packages.
  apt:
    name: "{{ item }}"
  with_items:
    - git
    - python-pip
    - python3-pip
    - python-pycurl
    - software-properties-common
    - apt-transport-https
    - curl
    - software-properties-common
    - certbot
  tags: [install-packages]
  become: yes

- name: Stop nginx to renew certs.
  service:
    service: nginx
    state: stopped
  tags: cert-install
  become: yes
  when: "'registry-hosts' in group_names"

- name: Get certifcates via LetsEncrypt certbot
  command: certbot --standalone --non-interactive --agree-tos -m "{{ admin_email_address }}" -d "{{ inventory_hostname }}" certonly
  become: yes
  tags: cert-install

- name: Start nginx
  service:
    name: nginx
    state: started
  tags: cert-install
  become: yes
  when: "'registry-hosts' in group_names"

- name: Cron job to renew letsencrypt certificates
  become: yes
  cron:
      hour: "6"
      minute: "0"
      day: "1,15"
      job: "(/usr/sbin/service nginx stop && /usr/bin/certbot renew && /usr/sbin/service nginx start)"
      name: "Renew letsencrypts certificates"
      state: present
      user: root
  tags: cert-install

- name: Copy correct certificate private key for nginx
  copy:
    dest: /etc/ssl/private/frdr.key
    src: /etc/letsencrypt/live/{{ inventory_hostname }}/privkey.pem
    remote_src: yes
    owner: root
    group: root
    mode: 0600
  become: yes
  tags: cert-install

- name: Copy correct certificage for nginx
  copy:
    dest: /etc/ssl/certs/frdr.crt
    src: /etc/letsencrypt/live/{{ inventory_hostname }}/fullchain.pem
    remote_src: yes
    owner: root
    group: root
    mode: 0611
  become: yes
  tags: cert-install

# Update packages and install some early dependencies.

- name: Update all packages
  become: yes
  apt:
    update_cache: yes
    upgrade: yes
  tags: cert-install

# Add cron jobs for updating packages

- name: Add cron job for weekly updates.
  cron:
    name: Check for updates.
    day: "1,15"
    hour: "1"
    minute: "0"
    job: "apt-get update"
  become: yes
  tags: hosts-setup

- name: Add cron job for weekly updates.
  cron:
    name: Do dist-upgrade.
    day: "1,15"
    hour: "2"
    minute: "0"
    job: "(export PATH=/bin:/usr/bin:/sbin:/usr/sbin && export DEBIAN_FRONTEND=noninteractive && apt-get dist-upgrade -y > /dev/null)"
  become: yes
  tags: hosts-setup

- name: Add cron job to reboot after kernel upgrades
  cron:
    name: Reboot after kernel upgrades
    day: "1,15"
    hour: "3"
    minute: "0"
    job: "(stat /var/run/reboot-required && /sbin/reboot)"
  become: yes
  tags: hosts-setup

