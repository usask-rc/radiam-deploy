# Install nginx and set up reverse proxy for registry

- include_vars:
    dir: vars
    extensions: [yml]

- name: Install nginx
  apt:
    name: nginx
  become: yes
  tags: [nginx]

- name: Stop nginx
  service:
    name: nginx
    state: stopped
  become: yes

- name: Copy nginx reverse proxy setup
  copy:
    src: proxy.conf
    dest: /etc/nginx/sites-available/proxy.conf
    owner: root
    group: root
    mode: 0644
  tags: [nginx]
  become: yes

- name: Link proxy setup to deploy.
  file:
    state: link
    src: /etc/nginx/sites-available/proxy.conf
    path: /etc/nginx/sites-enabled/proxy.conf
  become: yes
  tags: [nginx]

- name: Remove default configuration.
  file:
    state: absent
    path: /etc/nginx/sites-enabled/default
  become: yes
  tags: [nginx]

- name: Generate .htpasswd credentials for registry
  htpasswd:
    path: /etc/nginx/conf.d/nginx.htpasswd
    owner: root
    group: www-data
    mode: 0640
    name: "{{ registry_user }}"
    password: "{{ registry_password }}"
  become: yes


# Docker login to generate creds for root at end

- name: Restart nginx
  service:
    name: nginx
    state: restarted
  become: yes
  tags: [nginx]

- name: Setup docker registry init
  copy:
    src: populate-registry.sh
    dest: /mnt
    owner: ubuntu
    group: ubuntu
    mode: 0755
  become: yes
  tags: registry

- name: Install docker registry start file
  copy:
    src: rc.local
    dest: /etc/rc.local
    owner: root
    group: root
    mode: 0755
  become: yes
  tags: registry

- name: Login to docker registry to create cached credentials for root user.
  docker_login:
    registry: "{{ inventory_hostname }}"
    username: "{{ registry_user }}"
    password: "{{ registry_password }}"
  become: yes

- name: Start docker registry
  command: /etc/rc.local
  become: yes
  tags: registry
